#Formato del proyecto

Docker-Microservicios/
├── microservicios-app/
│   ├── src/
│   │   ├── controllers/
│   │   │   ├── abonadoController.js
│   │   │   ├── clienteController.js
│   │   │   ├── servSuplController.js
│   │   │   └── servSuplAbonadoController.js
│   │   ├── routes/
│   │   │   ├── abonadoRoutes.js
│   │   │   ├── clienteRoutes.js
│   │   │   ├── servSuplRoutes.js
│   │   │   └── servSuplAbonadoRoutes.js
│   │   ├── models/
│   │   │   ├── abonadoModel.js
│   │   │   ├── clienteModel.js
│   │   │   ├── servSuplModel.js
│   │   │   └── servSuplAbonadoModel.js
│   │   └── db.js
│   ├── index.js
│   ├── Dockerfile
│   ├── docker-compose.yml
│   ├── .env
│   └── package.json

//Crear package.json e instalacion de dependencias por terminal

npm init -y
npm install express pg dotenv

//Creacion de contenedores por teminal

docker-compose up --build

//Cerrar los contenedores

docker-compose down

//Formato de postman para requests

Metodo: get
Formato: localhost:3000/suscriber-manager-services/x_servicio?llave_servicio=x_llave

Opción: post
Formato: localhost:3000/suscriber-manager-services/x_crearservicio
Seleccionar la opción Body en Postman.
Luego elige la opción raw.
Ingresar los datos a generar segun las columnas de la tabla

{
    x dato,
    ... ,
    n dato
}

Metodo: put
Formato: localhost:3000/suscriber-manager-services/x_crearservicio
Luego elige la opción raw.
Ingresar los datos restantes que no sean llaves a modificar segun las columnas de la tabla

{
    x dato,
    ... ,
    n dato
}

Metodo: delete
Formato: localhost:3000/suscriber-manager-services/x_servicio?llave_servicio=x_llave



